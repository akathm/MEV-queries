WITH block_times AS (SELECT
    block_number
    , miner
    , extradata
    , DATETIME AS timestamp
    , (timestamp-(LAG(block.timestamp) OVER(ORDER BY block.BLOCK_NUMBER)))  AS time_required
    , LAG(block.timestamp) OVER(ORDER BY block.BLOCK_NUMBER DESC) AS next_timestamp
    , row_number() over (ORDER BY BLOCK_NUMBER) AS row
    FROM BLOCK
    )
, cut_off_calc AS (SELECT BLOCK_NUMBER
                        , ROUND(time_required / 3)             AS last_refresh --can change here to check assumptions
                        , ROUND(time_required / 3) * 3000      AS mscutoff --transfers into ms for closest comparison
                   FROM block_times
                   )
, best_bundle_in_range AS (SELECT
    block_times.BLOCK_NUMBER
    , ID as mev_geth_logger_id
    , ismegabundle
    , ISFLASHBOTS
    , profiteth
    , ROW_NUMBER() OVER (PARTITION BY log_tracker.BLOCKNUMBER ORDER BY log_tracker.PROFITETH DESC) AS profit_rank
    , case when mssinceblockstart <= mscutoff OR (time_required <= 3 AND mssinceblockstart*.001 <= time_required) then 'y' else 'n' end as viable
    , time_required
    FROM log_tracker
    LEFT JOIN cut_off_calc
        ON log_tracker.BLOCKNUMBER = cut_off_calc.BLOCK_NUMBER
    LEFT JOIN block_times
        ON log_tracker.blocknumber = block_times.block_number
    WHERE ROUND(mssinceblockstart*.001) <= time_required
)
, viable_calc AS (SELECT
    block_number
    , isflashbots
    , ismegabundle
    , profiteth
    , ROW_NUMBER() OVER (PARTITION BY block_number ORDER BY PROFITETH DESC) AS profit_rank
    FROM best_bundle_in_range
    WHERE viable = 'y'
    )
select
     sum (viable_calc.profiteth) AS profit_from_viable
     , sum (case when viable_calc.profiteth >= profit.block_net_profit THEN best_bundle_in_range.profiteth
                else block_net_profit END) AS profit_from_best_all_time
     , sum (case when profit.block_number BETWEEN 14000001 AND 14121050 THEN block_net_profit END) AS actual_profit
     , count(distinct case when viable_calc.ismegabundle = true then viable_calc.block_number end) AS n_mb_viable
     , count(distinct case when best_bundle_in_range.ismegabundle = true then best_bundle_in_range.block_number end) AS n_mb_all_time
     , count(distinct case when viable_calc.isflashbots = true then viable_calc.block_number end) AS n_fb_viable
     , count(distinct case when best_bundle_in_range.isflashbots = true then best_bundle_in_range.block_number end) AS n_fb_all_time
FROM best_bundle_in_range
LEFT JOIN viable_calc
    ON viable_calc.block_number = best_bundle_in_range.block_number
LEFT JOIN profit
    ON profit.block_number = best_bundle_in_range.block_number
WHERE viable_calc.profit_rank = 1
AND best_bundle_in_range.profit_rank = 1
